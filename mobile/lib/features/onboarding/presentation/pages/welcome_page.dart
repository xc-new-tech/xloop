import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:go_router/go_router.dart';
import '../../../../core/theme/app_colors.dart';
import '../../../../core/constants/app_constants.dart';
import '../../../../shared/widgets/custom_button.dart';

class WelcomePage extends StatefulWidget {
  const WelcomePage({super.key});

  @override
  State<WelcomePage> createState() => _WelcomePageState();
}

class _WelcomePageState extends State<WelcomePage>
    with TickerProviderStateMixin {
  late AnimationController _fadeController;
  late AnimationController _slideController;
  late Animation<double> _fadeAnimation;
  late Animation<Offset> _slideAnimation;

  @override
  void initState() {
    super.initState();
    _initAnimations();
    _startAnimations();
  }

  void _initAnimations() {
    _fadeController = AnimationController(
      duration: const Duration(milliseconds: 1500),
      vsync: this,
    );
    
    _slideController = AnimationController(
      duration: const Duration(milliseconds: 1200),
      vsync: this,
    );

    _fadeAnimation = Tween<double>(
      begin: 0.0,
      end: 1.0,
    ).animate(CurvedAnimation(
      parent: _fadeController,
      curve: Curves.easeInOut,
    ));

    _slideAnimation = Tween<Offset>(
      begin: const Offset(0, 0.3),
      end: Offset.zero,
    ).animate(CurvedAnimation(
      parent: _slideController,
      curve: Curves.easeOutCubic,
    ));
  }

  void _startAnimations() {
    Future.delayed(const Duration(milliseconds: 300), () {
      _fadeController.forward();
    });
    
    Future.delayed(const Duration(milliseconds: 600), () {
      _slideController.forward();
    });
  }

  @override
  void dispose() {
    _fadeController.dispose();
    _slideController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.background,
      body: SafeArea(
        child: Padding(
          padding: EdgeInsets.symmetric(horizontal: 24.w),
          child: Column(
            children: [
              // È°∂ÈÉ®Ë∑≥ËøáÊåâÈíÆ
              Align(
                alignment: Alignment.topRight,
                child: Padding(
                  padding: EdgeInsets.only(top: 16.h),
                  child: TextButton(
                    onPressed: () => _skipOnboarding(),
                    child: Text(
                      'Ë∑≥Ëøá',
                      style: TextStyle(
                        fontSize: 16.sp,
                        color: AppColors.textSecondary,
                      ),
                    ),
                  ),
                ),
              ),
              
              Expanded(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    // LogoÂíåÊ¨¢ËøéÂä®Áîª
                    FadeTransition(
                      opacity: _fadeAnimation,
                      child: SlideTransition(
                        position: _slideAnimation,
                        child: Column(
                          children: [
                            // Logo
                            Container(
                              width: 120.w,
                              height: 120.w,
                              decoration: BoxDecoration(
                                color: AppColors.primary,
                                borderRadius: BorderRadius.circular(24.r),
                                boxShadow: [
                                  BoxShadow(
                                    color: AppColors.primary.withOpacity(0.3),
                                    blurRadius: 20,
                                    offset: const Offset(0, 10),
                                  ),
                                ],
                              ),
                              child: Icon(
                                Icons.auto_awesome,
                                size: 60.w,
                                color: Colors.white,
                              ),
                            ),
                            
                            SizedBox(height: 32.h),
                            
                            // Ê¨¢ËøéÊ†áÈ¢ò
                            Text(
                              'Welcome!',
                              style: TextStyle(
                                fontSize: 32.sp,
                                fontWeight: FontWeight.bold,
                                color: AppColors.textPrimary,
                              ),
                            ),
                            
                            SizedBox(height: 16.h),
                            
                            // Ê¨¢ËøéÂâØÊ†áÈ¢ò
                            Text(
                              'ÊåâÁÖß‰ª•‰∏ãÊ≠•È™§ÂàõÂª∫ÊÇ®ÁöÑÁ¨¨‰∏Ä‰∏™Áü•ËØÜÂ∫ì',
                              style: TextStyle(
                                fontSize: 18.sp,
                                color: AppColors.textSecondary,
                                height: 1.4,
                              ),
                              textAlign: TextAlign.center,
                            ),
                            
                            SizedBox(height: 48.h),
                            
                            // ÂäüËÉΩ‰ªãÁªçÂç°Áâá
                            _buildFeatureCard(),
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
              ),
              
              // Â∫ïÈÉ®ÊåâÈíÆ
              Padding(
                padding: EdgeInsets.only(bottom: 32.h),
                child: Column(
                  children: [
                    // Á´ãÂç≥ÂºÄÂßãÊåâÈíÆ
                    CustomButton(
                      text: 'ÂºÄÂßãÂºïÂØº',
                      onPressed: () => context.push('/onboarding'),
                    ),
                    
                    SizedBox(height: 16.h),
                    
                    // Á®çÂêéËÆæÁΩÆÊåâÈíÆ
                    CustomButton(
                      text: 'Á®çÂêéËÆæÁΩÆ',
                      onPressed: () => _skipToMain(),
                      isOutlined: true,
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildFeatureCard() {
    return Container(
      padding: EdgeInsets.all(24.w),
      decoration: BoxDecoration(
        color: AppColors.surface,
        borderRadius: BorderRadius.circular(16.r),
        border: Border.all(
          color: AppColors.outline.withOpacity(0.1),
        ),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Column(
        children: [
          Text(
            'üöÄ Âø´ÈÄü‰∏äÊâãÊåáÂçó',
            style: TextStyle(
              fontSize: 20.sp,
              fontWeight: FontWeight.w600,
              color: AppColors.textPrimary,
            ),
          ),
          
          SizedBox(height: 16.h),
          
          _buildFeatureItem(
            icon: Icons.folder_outlined,
            title: 'ÂàõÂª∫Áü•ËØÜÂ∫ì',
            description: 'ËÆæÁΩÆÊÇ®ÁöÑ‰∏ìÂ±ûÁü•ËØÜÁ©∫Èó¥',
          ),
          
          SizedBox(height: 12.h),
          
          _buildFeatureItem(
            icon: Icons.upload_file_outlined,
            title: '‰∏ä‰º†ÊñáÊ°£',
            description: 'ÂØºÂÖ•ÊÇ®ÁöÑÊñáÊ°£ÂíåËµÑÊñô',
          ),
          
          SizedBox(height: 12.h),
          
          _buildFeatureItem(
            icon: Icons.chat_outlined,
            title: 'Êô∫ËÉΩÈóÆÁ≠î',
            description: 'ÂºÄÂßã‰∏éÊÇ®ÁöÑÁü•ËØÜÂ∫ìÂØπËØù',
          ),
        ],
      ),
    );
  }

  Widget _buildFeatureItem({
    required IconData icon,
    required String title,
    required String description,
  }) {
    return Row(
      children: [
        Container(
          width: 40.w,
          height: 40.w,
          decoration: BoxDecoration(
            color: AppColors.primary.withOpacity(0.1),
            borderRadius: BorderRadius.circular(8.r),
          ),
          child: Icon(
            icon,
            size: 20.w,
            color: AppColors.primary,
          ),
        ),
        
        SizedBox(width: 12.w),
        
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                title,
                style: TextStyle(
                  fontSize: 16.sp,
                  fontWeight: FontWeight.w500,
                  color: AppColors.textPrimary,
                ),
              ),
              
              Text(
                description,
                style: TextStyle(
                  fontSize: 14.sp,
                  color: AppColors.textSecondary,
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }

  void _startOnboarding() {
    context.go('/onboarding');
  }

  void _skipOnboarding() {
    _showSkipDialog();
  }

  void _skipToMain() {
    context.go('/knowledge-base');
  }

  void _showSkipDialog() {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('Ë∑≥ËøáÂºïÂØº'),
        content: const Text('ÊÇ®Á°ÆÂÆöË¶ÅË∑≥ËøáÊñ∞ÊâãÂºïÂØºÂêóÔºüÊÇ®ÂèØ‰ª•Á®çÂêéÂú®ËÆæÁΩÆ‰∏≠ÈáçÊñ∞Êü•Áúã„ÄÇ'),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(context).pop(),
            child: const Text('ÂèñÊ∂à'),
          ),
          TextButton(
            onPressed: () {
              Navigator.of(context).pop();
              _skipToMain();
            },
            child: const Text('Á°ÆÂÆö'),
          ),
        ],
      ),
    );
  }
} 